# Generated by Django 4.2.2 on 2023-06-08 21:32

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Sync",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "name",
                    models.SlugField(
                        help_text="Unique sync name as a slug to safely use across all workers and as part of lock names",
                        max_length=255,
                        unique=True,
                        verbose_name="Name",
                    ),
                ),
                (
                    "enabled",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        help_text="Dynamically enable or disable this sync",
                        verbose_name="Enabled",
                    ),
                ),
                (
                    "contract_address",
                    models.CharField(
                        help_text="ETH contract address", max_length=255, verbose_name="Contract Address"
                    ),
                ),
                ("contract_abi", models.JSONField(help_text="ETH Contract ABI", verbose_name="Contract ABI")),
                (
                    "last_synced_block_number",
                    models.BigIntegerField(
                        blank=True,
                        default=0,
                        help_text="During synchronization saving here the last synced block number",
                        verbose_name="Last Synced Block Number",
                    ),
                ),
                (
                    "sync_block_range",
                    models.IntegerField(
                        blank=True,
                        default=1000,
                        help_text="Set as 0 to always take till current block",
                        verbose_name="Block Range",
                    ),
                ),
                (
                    "node_http_address",
                    models.CharField(
                        help_text="Used by Web3 HTTPProvider during ranged sync",
                        max_length=255,
                        verbose_name="Node HTTP Address",
                    ),
                ),
                (
                    "node_websocket_address",
                    models.CharField(
                        help_text="Used by Web3 SocketProvider for listening live events",
                        max_length=255,
                        verbose_name="Node WebSocket Address",
                    ),
                ),
                (
                    "live_events_connect_timeout",
                    models.IntegerField(
                        blank=True,
                        default=60,
                        help_text="How many seconds should wait for websocket connections",
                        verbose_name="Live events connect timeout",
                    ),
                ),
                (
                    "live_events_read_timeout",
                    models.IntegerField(
                        blank=True,
                        default=60,
                        help_text="How many seconds should wait for new data from opened websocket connections",
                        verbose_name="Live events read timeout",
                    ),
                ),
                (
                    "meta",
                    models.JSONField(
                        help_text='Meta data specific for this sync. Can be used by other modules to customize their behavior for this sync.In periodic task specific sync can be used like this: "{"name": "My Sync Name"}", or using some meta data: "{"meta__network": "goerli"}". Under the hood it will be using Sync.objects.get(**kwargs)',
                        verbose_name="Meta data",
                    ),
                ),
                (
                    "event_names",
                    models.JSONField(
                        help_text="Array of event names that should be synced", verbose_name="Event names"
                    ),
                ),
            ],
        ),
    ]

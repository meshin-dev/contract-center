# Generated by Django 4.2.2 on 2023-07-13 14:22

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("ssv_network", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="TestnetOperator",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("operator_id", models.IntegerField(verbose_name="Operator ID")),
                ("public_key", models.TextField(verbose_name="Operator Public Key")),
                ("owner", models.CharField(max_length=255, verbose_name="Owner Address")),
                ("block_number", models.BigIntegerField(verbose_name="Block Number")),
                ("fee", models.CharField(max_length=255, verbose_name="Fee")),
                ("previous_fee", models.CharField(max_length=255, verbose_name="Previous Fee")),
                ("declared_fee", models.CharField(max_length=255, verbose_name="Declared Fee")),
                ("is_valid", models.BooleanField(default=True, verbose_name="Is Valid")),
                ("is_deleted", models.BooleanField(default=False, verbose_name="Is Deleted")),
                ("errors", models.JSONField(blank=True, default=list, verbose_name="Errors")),
                ("version", models.CharField(max_length=255, verbose_name="Version")),
                ("network", models.CharField(max_length=255, verbose_name="Network")),
                ("data_version", models.BigIntegerField(verbose_name="Data Version")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("events", models.ManyToManyField(blank=True, to="ssv_network.testnetevent")),
            ],
            options={
                "abstract": False,
                "unique_together": {("operator_id", "network", "version", "data_version")},
            },
        ),
        migrations.CreateModel(
            name="MainnetOperator",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("operator_id", models.IntegerField(verbose_name="Operator ID")),
                ("public_key", models.TextField(verbose_name="Operator Public Key")),
                ("owner", models.CharField(max_length=255, verbose_name="Owner Address")),
                ("block_number", models.BigIntegerField(verbose_name="Block Number")),
                ("fee", models.CharField(max_length=255, verbose_name="Fee")),
                ("previous_fee", models.CharField(max_length=255, verbose_name="Previous Fee")),
                ("declared_fee", models.CharField(max_length=255, verbose_name="Declared Fee")),
                ("is_valid", models.BooleanField(default=True, verbose_name="Is Valid")),
                ("is_deleted", models.BooleanField(default=False, verbose_name="Is Deleted")),
                ("errors", models.JSONField(blank=True, default=list, verbose_name="Errors")),
                ("version", models.CharField(max_length=255, verbose_name="Version")),
                ("network", models.CharField(max_length=255, verbose_name="Network")),
                ("data_version", models.BigIntegerField(verbose_name="Data Version")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("events", models.ManyToManyField(blank=True, to="ssv_network.mainnetevent")),
            ],
            options={
                "abstract": False,
                "unique_together": {("operator_id", "network", "version", "data_version")},
            },
        ),
    ]
